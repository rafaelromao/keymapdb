
async function getKeymapsJSON(){return fetch("/keymaps_metadata.json").then(e=>e.json())}function isKeymapConforming(e,n){for(const[t,s]of e)if(t.endsWith("Count")){let e,o;[e,o]=s.split("-").map(Number),void 0!==o||isNaN(e)||(o=e);const r=Number(n[t]);if(!(e<=r&&r<=o))return!1}else if(n[t]instanceof Array){if(!s.split(",").some(e=>new Set(n[t]).has(e)))return!1}else if("search"===t){let e=e=>["title","author","summary"].map(t=>n[t]&&-1!==String(n[t]).toLowerCase().indexOf(e.toLowerCase())).some(Boolean);if(!s.split(" ").every(e))return!1}else if(n[t]!==s&&n[t]!==("true"===s))return!1;return!0}async function getFilteredKeymaps(){const e=new URLSearchParams(location.search);return getKeymapsJSON().then(n=>n.filter(n=>isKeymapConforming(e,n)))}async function populatePostGrid(e){const n=$("post-grid");n.innerHTML="";const t=Number((location.pathname.match(/page\/([0-9]+)/)||["page/1","1"])[1]),s=18*(t-1),o=e.slice(s,s+18);if(0===e.length)$("showing-n-results").innerText="No results found.";else if(s<e.length)$("showing-n-results").innerText=`Showing ${s+1} to ${Math.min(s+18,e.length)} of ${e.length} results found.`;else{$("showing-n-results").innerText=`Showing 0 to 0 of ${e.length} results found.`;const n=Math.ceil(e.length/18);$("showing-n-results").innerText+=1===n?` There is only 1 page for this search, not ${t}.`:` There are only ${n} pages for this search, not ${t}.`}syncPaginationButtons();for(const e of o)n.innerHTML+=card(e,e.url)}const pageRegExp=new RegExp("/page/[0-9]+");("/"===location.pathname||pageRegExp.test(location.pathname))&&getFilteredKeymaps().then(e=>populatePostGrid(e));

